#pragma checksum "C:\Users\Nabeel Hyder\MegaWattLaserController\MegaWattLaserController\WaveformPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "DE9AD74FA52F6F4D7F60CC9886D97B50851FEB0E780A1510D002DC4F41A044F7"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LaserControllerApp
{
    partial class WaveformPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2402")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_LiveChartsCore_SkiaSharpView_WinUI_CartesianChart_Series(global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart obj, global::System.Collections.Generic.IEnumerable<global::LiveChartsCore.ISeries> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Collections.Generic.IEnumerable<global::LiveChartsCore.ISeries>) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Collections.Generic.IEnumerable<global::LiveChartsCore.ISeries>), targetNullValue);
                }
                obj.Series = value;
            }
            public static void Set_LiveChartsCore_SkiaSharpView_WinUI_CartesianChart_XAxes(global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart obj, global::System.Collections.Generic.IEnumerable<global::LiveChartsCore.Kernel.Sketches.ICartesianAxis> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Collections.Generic.IEnumerable<global::LiveChartsCore.Kernel.Sketches.ICartesianAxis>) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Collections.Generic.IEnumerable<global::LiveChartsCore.Kernel.Sketches.ICartesianAxis>), targetNullValue);
                }
                obj.XAxes = value;
            }
            public static void Set_LiveChartsCore_SkiaSharpView_WinUI_CartesianChart_YAxes(global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart obj, global::System.Collections.Generic.IEnumerable<global::LiveChartsCore.Kernel.Sketches.ICartesianAxis> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Collections.Generic.IEnumerable<global::LiveChartsCore.Kernel.Sketches.ICartesianAxis>) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Collections.Generic.IEnumerable<global::LiveChartsCore.Kernel.Sketches.ICartesianAxis>), targetNullValue);
                }
                obj.YAxes = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2402")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class WaveformPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IWaveformPage_Bindings
        {
            private global::LaserControllerApp.WaveformPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart obj8;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj8SeriesDisabled = false;
            private static bool isobj8XAxesDisabled = false;
            private static bool isobj8YAxesDisabled = false;

            public WaveformPage_obj1_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 21 && columnNumber == 21)
                {
                    isobj8SeriesDisabled = true;
                }
                else if (lineNumber == 22 && columnNumber == 21)
                {
                    isobj8XAxesDisabled = true;
                }
                else if (lineNumber == 23 && columnNumber == 21)
                {
                    isobj8YAxesDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 8: // WaveformPage.xaml line 18
                        this.obj8 = global::WinRT.CastExtensions.As<global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2402")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IWaveformPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::LaserControllerApp.WaveformPage>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::LaserControllerApp.WaveformPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::LaserControllerApp.ViewModels.WaveformViewModel obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Series(obj.Series, phase);
                        this.Update_ViewModel_XAxes(obj.XAxes, phase);
                        this.Update_ViewModel_YAxes(obj.YAxes, phase);
                    }
                }
            }
            private void Update_ViewModel_Series(global::LiveChartsCore.ISeries[] obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // WaveformPage.xaml line 18
                    if (!isobj8SeriesDisabled)
                    {
                        XamlBindingSetters.Set_LiveChartsCore_SkiaSharpView_WinUI_CartesianChart_Series(this.obj8, obj, null);
                    }
                }
            }
            private void Update_ViewModel_XAxes(global::System.Collections.Generic.IEnumerable<global::LiveChartsCore.Kernel.Sketches.ICartesianAxis> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // WaveformPage.xaml line 18
                    if (!isobj8XAxesDisabled)
                    {
                        XamlBindingSetters.Set_LiveChartsCore_SkiaSharpView_WinUI_CartesianChart_XAxes(this.obj8, obj, null);
                    }
                }
            }
            private void Update_ViewModel_YAxes(global::System.Collections.Generic.IEnumerable<global::LiveChartsCore.Kernel.Sketches.ICartesianAxis> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // WaveformPage.xaml line 18
                    if (!isobj8YAxesDisabled)
                    {
                        XamlBindingSetters.Set_LiveChartsCore_SkiaSharpView_WinUI_CartesianChart_YAxes(this.obj8, obj, null);
                    }
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2402")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1: // WaveformPage.xaml line 1
                {
                    global::Microsoft.UI.Xaml.Controls.Page element1 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Page>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Page)element1).Loaded += this.Page_Loaded;
                    ((global::Microsoft.UI.Xaml.Controls.Page)element1).Unloaded += this.Page_Unloaded;
                }
                break;
            case 2: // WaveformPage.xaml line 43
                {
                    this.StatusText = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 3: // WaveformPage.xaml line 29
                {
                    this.StartButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.StartButton).Click += this.StartMonitoring_Click;
                }
                break;
            case 4: // WaveformPage.xaml line 30
                {
                    this.StopButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.StopButton).Click += this.StopMonitoring_Click;
                }
                break;
            case 5: // WaveformPage.xaml line 31
                {
                    this.TimeScaleComboBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ComboBox)this.TimeScaleComboBox).SelectionChanged += this.TimeScaleComboBox_SelectionChanged;
                }
                break;
            case 6: // WaveformPage.xaml line 39
                {
                    this.ClearButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.ClearButton).Click += this.ClearChart_Click;
                }
                break;
            case 7: // WaveformPage.xaml line 40
                {
                    this.ResetZoomButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.ResetZoomButton).Click += this.ResetZoom_Click;
                }
                break;
            case 8: // WaveformPage.xaml line 18
                {
                    this.WaveformChart = global::WinRT.CastExtensions.As<global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart>(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2402")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // WaveformPage.xaml line 1
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    WaveformPage_obj1_Bindings bindings = new WaveformPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

